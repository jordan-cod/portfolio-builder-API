basePath: /api
definitions:
  models.ErrorResponse:
    properties:
      error:
        example: Erro ao validar os dados
        type: string
    type: object
  models.HealthResponse:
    properties:
      message:
        example: ok
        type: string
    type: object
  models.ProjectListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProjectSwagger'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalCount:
        type: integer
    type: object
  models.ProjectSwagger:
    properties:
      createdAt:
        example: "2025-04-04T12:00:00Z"
        type: string
      description:
        example: Um criador de portfólios para devs
        type: string
      id:
        example: "1"
        type: string
      image:
        example: https://meuportfolio.com/capa.png
        type: string
      isFavorite:
        example: false
        type: boolean
      link:
        example: https://meuportfolio.com
        type: string
      techStack:
        example:
        - '["React"'
        - ' "TypeScript"'
        - ' "Node.js"]'
        items:
          type: string
        type: array
      title:
        example: Portfolio Builder
        type: string
      updatedAt:
        example: "2025-04-04T12:00:00Z"
        type: string
    type: object
  models.RegisterInput:
    properties:
      email:
        example: joao@email.com
        type: string
      name:
        example: João
        type: string
      password:
        example: minhasenha123
        type: string
    type: object
  models.RegisterResponse:
    properties:
      api_key:
        example: meu-token-api-gerado
        type: string
      message:
        example: Usuário cadastrado com sucesso
        type: string
    type: object
info:
  contact: {}
  description: An open source API for managing developer portfolios.
  title: Portfolio Builder API
  version: "1.0"
paths:
  /health:
    get:
      description: Returns a simple message to confirm the server is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.HealthResponse'
      summary: Check API health
      tags:
      - health
  /projects:
    get:
      description: Returns all user's projects with pagination and sorting
      parameters:
      - description: Current page
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      - description: Sort field (e.g. name, created_at)
        in: query
        name: sort
        type: string
      - description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectListResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Creates a new project for the authenticated user
      parameters:
      - description: Project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.ProjectSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProjectSwagger'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a project
      tags:
      - Projects
  /projects/{id}:
    delete:
      description: Deletes a project from the authenticated user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a project
      tags:
      - Projects
    get:
      description: Returns a specific project by ID for the authenticated user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectSwagger'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get project by ID
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: Updates a project of the authenticated user
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.ProjectSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a project
      tags:
      - Projects
  /projects/{id}/favorite:
    patch:
      description: Toggles the favorite status of a project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Toggle favorite
      tags:
      - Projects
  /projects/export/csv:
    get:
      description: Exports all authenticated user's projects in CSV format
      produces:
      - text/csv
      responses:
        "200":
          description: CSV file
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Export projects to CSV
      tags:
      - Projects
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user with name, email, and password
      parameters:
      - description: User registration data
        in: body
        name: registerData
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Registers a new user
      tags:
      - auth
  /user/api-key:
    post:
      description: Generates a new API key for the authenticated user and replaces
        the old one
      produces:
      - application/json
      responses:
        "200":
          description: API key successfully rotated
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Rotate the user's API key
      tags:
      - auth
swagger: "2.0"
